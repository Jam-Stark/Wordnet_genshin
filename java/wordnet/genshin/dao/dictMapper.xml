<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="wordnet.genshin.dao.dictMapper">
  <resultMap id="BaseResultMap" type="wordnet.genshin.domain.dict">
    <result column="synsetid" jdbcType="INTEGER" property="synsetid" />
    <result column="wordid" jdbcType="INTEGER" property="wordid" />
    <result column="casedwordid" jdbcType="INTEGER" property="casedwordid" />
    <result column="lemma" jdbcType="VARCHAR" property="lemma" />
    <result column="senseid" jdbcType="INTEGER" property="senseid" />
    <result column="sensenum" jdbcType="SMALLINT" property="sensenum" />
    <result column="lexid" jdbcType="SMALLINT" property="lexid" />
    <result column="tagcount" jdbcType="INTEGER" property="tagcount" />
    <result column="sensekey" jdbcType="VARCHAR" property="sensekey" />
    <result column="cased" jdbcType="VARCHAR" property="cased" />
    <result column="pos" jdbcType="CHAR" property="pos" />
    <result column="lexdomainid" jdbcType="SMALLINT" property="lexdomainid" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="wordnet.genshin.domain.dictWithBLOBs">
    <result column="definition" jdbcType="LONGVARCHAR" property="definition" />
    <result column="sampleset" jdbcType="LONGVARCHAR" property="sampleset" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    synsetid, wordid, casedwordid, lemma, senseid, sensenum, lexid, tagcount, sensekey, 
    cased, pos, lexdomainid
  </sql>
  <sql id="Blob_Column_List">
    definition, sampleset
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="wordnet.genshin.domain.dictExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from dict
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="wordnet.genshin.domain.dictExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dict
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="wordnet.genshin.domain.dictExample">
    delete from dict
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="wordnet.genshin.domain.dictWithBLOBs">
    insert into dict (synsetid, wordid, casedwordid, 
      lemma, senseid, sensenum, 
      lexid, tagcount, sensekey, 
      cased, pos, lexdomainid, 
      definition, sampleset)
    values (#{synsetid,jdbcType=INTEGER}, #{wordid,jdbcType=INTEGER}, #{casedwordid,jdbcType=INTEGER}, 
      #{lemma,jdbcType=VARCHAR}, #{senseid,jdbcType=INTEGER}, #{sensenum,jdbcType=SMALLINT}, 
      #{lexid,jdbcType=SMALLINT}, #{tagcount,jdbcType=INTEGER}, #{sensekey,jdbcType=VARCHAR}, 
      #{cased,jdbcType=VARCHAR}, #{pos,jdbcType=CHAR}, #{lexdomainid,jdbcType=SMALLINT}, 
      #{definition,jdbcType=LONGVARCHAR}, #{sampleset,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="wordnet.genshin.domain.dictWithBLOBs">
    insert into dict
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="synsetid != null">
        synsetid,
      </if>
      <if test="wordid != null">
        wordid,
      </if>
      <if test="casedwordid != null">
        casedwordid,
      </if>
      <if test="lemma != null">
        lemma,
      </if>
      <if test="senseid != null">
        senseid,
      </if>
      <if test="sensenum != null">
        sensenum,
      </if>
      <if test="lexid != null">
        lexid,
      </if>
      <if test="tagcount != null">
        tagcount,
      </if>
      <if test="sensekey != null">
        sensekey,
      </if>
      <if test="cased != null">
        cased,
      </if>
      <if test="pos != null">
        pos,
      </if>
      <if test="lexdomainid != null">
        lexdomainid,
      </if>
      <if test="definition != null">
        definition,
      </if>
      <if test="sampleset != null">
        sampleset,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="synsetid != null">
        #{synsetid,jdbcType=INTEGER},
      </if>
      <if test="wordid != null">
        #{wordid,jdbcType=INTEGER},
      </if>
      <if test="casedwordid != null">
        #{casedwordid,jdbcType=INTEGER},
      </if>
      <if test="lemma != null">
        #{lemma,jdbcType=VARCHAR},
      </if>
      <if test="senseid != null">
        #{senseid,jdbcType=INTEGER},
      </if>
      <if test="sensenum != null">
        #{sensenum,jdbcType=SMALLINT},
      </if>
      <if test="lexid != null">
        #{lexid,jdbcType=SMALLINT},
      </if>
      <if test="tagcount != null">
        #{tagcount,jdbcType=INTEGER},
      </if>
      <if test="sensekey != null">
        #{sensekey,jdbcType=VARCHAR},
      </if>
      <if test="cased != null">
        #{cased,jdbcType=VARCHAR},
      </if>
      <if test="pos != null">
        #{pos,jdbcType=CHAR},
      </if>
      <if test="lexdomainid != null">
        #{lexdomainid,jdbcType=SMALLINT},
      </if>
      <if test="definition != null">
        #{definition,jdbcType=LONGVARCHAR},
      </if>
      <if test="sampleset != null">
        #{sampleset,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="wordnet.genshin.domain.dictExample" resultType="java.lang.Long">
    select count(*) from dict
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dict
    <set>
      <if test="record.synsetid != null">
        synsetid = #{record.synsetid,jdbcType=INTEGER},
      </if>
      <if test="record.wordid != null">
        wordid = #{record.wordid,jdbcType=INTEGER},
      </if>
      <if test="record.casedwordid != null">
        casedwordid = #{record.casedwordid,jdbcType=INTEGER},
      </if>
      <if test="record.lemma != null">
        lemma = #{record.lemma,jdbcType=VARCHAR},
      </if>
      <if test="record.senseid != null">
        senseid = #{record.senseid,jdbcType=INTEGER},
      </if>
      <if test="record.sensenum != null">
        sensenum = #{record.sensenum,jdbcType=SMALLINT},
      </if>
      <if test="record.lexid != null">
        lexid = #{record.lexid,jdbcType=SMALLINT},
      </if>
      <if test="record.tagcount != null">
        tagcount = #{record.tagcount,jdbcType=INTEGER},
      </if>
      <if test="record.sensekey != null">
        sensekey = #{record.sensekey,jdbcType=VARCHAR},
      </if>
      <if test="record.cased != null">
        cased = #{record.cased,jdbcType=VARCHAR},
      </if>
      <if test="record.pos != null">
        pos = #{record.pos,jdbcType=CHAR},
      </if>
      <if test="record.lexdomainid != null">
        lexdomainid = #{record.lexdomainid,jdbcType=SMALLINT},
      </if>
      <if test="record.definition != null">
        definition = #{record.definition,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.sampleset != null">
        sampleset = #{record.sampleset,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update dict
    set synsetid = #{record.synsetid,jdbcType=INTEGER},
      wordid = #{record.wordid,jdbcType=INTEGER},
      casedwordid = #{record.casedwordid,jdbcType=INTEGER},
      lemma = #{record.lemma,jdbcType=VARCHAR},
      senseid = #{record.senseid,jdbcType=INTEGER},
      sensenum = #{record.sensenum,jdbcType=SMALLINT},
      lexid = #{record.lexid,jdbcType=SMALLINT},
      tagcount = #{record.tagcount,jdbcType=INTEGER},
      sensekey = #{record.sensekey,jdbcType=VARCHAR},
      cased = #{record.cased,jdbcType=VARCHAR},
      pos = #{record.pos,jdbcType=CHAR},
      lexdomainid = #{record.lexdomainid,jdbcType=SMALLINT},
      definition = #{record.definition,jdbcType=LONGVARCHAR},
      sampleset = #{record.sampleset,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dict
    set synsetid = #{record.synsetid,jdbcType=INTEGER},
      wordid = #{record.wordid,jdbcType=INTEGER},
      casedwordid = #{record.casedwordid,jdbcType=INTEGER},
      lemma = #{record.lemma,jdbcType=VARCHAR},
      senseid = #{record.senseid,jdbcType=INTEGER},
      sensenum = #{record.sensenum,jdbcType=SMALLINT},
      lexid = #{record.lexid,jdbcType=SMALLINT},
      tagcount = #{record.tagcount,jdbcType=INTEGER},
      sensekey = #{record.sensekey,jdbcType=VARCHAR},
      cased = #{record.cased,jdbcType=VARCHAR},
      pos = #{record.pos,jdbcType=CHAR},
      lexdomainid = #{record.lexdomainid,jdbcType=SMALLINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="wordnet.genshin.domain.dict">
    <result column="synsetid" jdbcType="INTEGER" property="synsetid" />
    <result column="wordid" jdbcType="INTEGER" property="wordid" />
    <result column="casedwordid" jdbcType="INTEGER" property="casedwordid" />
    <result column="lemma" jdbcType="VARCHAR" property="lemma" />
    <result column="senseid" jdbcType="INTEGER" property="senseid" />
    <result column="sensenum" jdbcType="SMALLINT" property="sensenum" />
    <result column="lexid" jdbcType="SMALLINT" property="lexid" />
    <result column="tagcount" jdbcType="INTEGER" property="tagcount" />
    <result column="sensekey" jdbcType="VARCHAR" property="sensekey" />
    <result column="cased" jdbcType="VARCHAR" property="cased" />
    <result column="pos" jdbcType="CHAR" property="pos" />
    <result column="lexdomainid" jdbcType="SMALLINT" property="lexdomainid" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="wordnet.genshin.domain.dictWithBLOBs">
    <result column="definition" jdbcType="LONGVARCHAR" property="definition" />
    <result column="sampleset" jdbcType="LONGVARCHAR" property="sampleset" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    synsetid, wordid, casedwordid, lemma, senseid, sensenum, lexid, tagcount, sensekey, 
    cased, pos, lexdomainid
  </sql>
  <sql id="Blob_Column_List">
    definition, sampleset
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="wordnet.genshin.domain.dictExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from dict
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="wordnet.genshin.domain.dictExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dict
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="wordnet.genshin.domain.dictExample">
    delete from dict
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="wordnet.genshin.domain.dictWithBLOBs">
    insert into dict (synsetid, wordid, casedwordid, 
      lemma, senseid, sensenum, 
      lexid, tagcount, sensekey, 
      cased, pos, lexdomainid, 
      definition, sampleset)
    values (#{synsetid,jdbcType=INTEGER}, #{wordid,jdbcType=INTEGER}, #{casedwordid,jdbcType=INTEGER}, 
      #{lemma,jdbcType=VARCHAR}, #{senseid,jdbcType=INTEGER}, #{sensenum,jdbcType=SMALLINT}, 
      #{lexid,jdbcType=SMALLINT}, #{tagcount,jdbcType=INTEGER}, #{sensekey,jdbcType=VARCHAR}, 
      #{cased,jdbcType=VARCHAR}, #{pos,jdbcType=CHAR}, #{lexdomainid,jdbcType=SMALLINT}, 
      #{definition,jdbcType=LONGVARCHAR}, #{sampleset,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="wordnet.genshin.domain.dictWithBLOBs">
    insert into dict
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="synsetid != null">
        synsetid,
      </if>
      <if test="wordid != null">
        wordid,
      </if>
      <if test="casedwordid != null">
        casedwordid,
      </if>
      <if test="lemma != null">
        lemma,
      </if>
      <if test="senseid != null">
        senseid,
      </if>
      <if test="sensenum != null">
        sensenum,
      </if>
      <if test="lexid != null">
        lexid,
      </if>
      <if test="tagcount != null">
        tagcount,
      </if>
      <if test="sensekey != null">
        sensekey,
      </if>
      <if test="cased != null">
        cased,
      </if>
      <if test="pos != null">
        pos,
      </if>
      <if test="lexdomainid != null">
        lexdomainid,
      </if>
      <if test="definition != null">
        definition,
      </if>
      <if test="sampleset != null">
        sampleset,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="synsetid != null">
        #{synsetid,jdbcType=INTEGER},
      </if>
      <if test="wordid != null">
        #{wordid,jdbcType=INTEGER},
      </if>
      <if test="casedwordid != null">
        #{casedwordid,jdbcType=INTEGER},
      </if>
      <if test="lemma != null">
        #{lemma,jdbcType=VARCHAR},
      </if>
      <if test="senseid != null">
        #{senseid,jdbcType=INTEGER},
      </if>
      <if test="sensenum != null">
        #{sensenum,jdbcType=SMALLINT},
      </if>
      <if test="lexid != null">
        #{lexid,jdbcType=SMALLINT},
      </if>
      <if test="tagcount != null">
        #{tagcount,jdbcType=INTEGER},
      </if>
      <if test="sensekey != null">
        #{sensekey,jdbcType=VARCHAR},
      </if>
      <if test="cased != null">
        #{cased,jdbcType=VARCHAR},
      </if>
      <if test="pos != null">
        #{pos,jdbcType=CHAR},
      </if>
      <if test="lexdomainid != null">
        #{lexdomainid,jdbcType=SMALLINT},
      </if>
      <if test="definition != null">
        #{definition,jdbcType=LONGVARCHAR},
      </if>
      <if test="sampleset != null">
        #{sampleset,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="wordnet.genshin.domain.dictExample" resultType="java.lang.Long">
    select count(*) from dict
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dict
    <set>
      <if test="record.synsetid != null">
        synsetid = #{record.synsetid,jdbcType=INTEGER},
      </if>
      <if test="record.wordid != null">
        wordid = #{record.wordid,jdbcType=INTEGER},
      </if>
      <if test="record.casedwordid != null">
        casedwordid = #{record.casedwordid,jdbcType=INTEGER},
      </if>
      <if test="record.lemma != null">
        lemma = #{record.lemma,jdbcType=VARCHAR},
      </if>
      <if test="record.senseid != null">
        senseid = #{record.senseid,jdbcType=INTEGER},
      </if>
      <if test="record.sensenum != null">
        sensenum = #{record.sensenum,jdbcType=SMALLINT},
      </if>
      <if test="record.lexid != null">
        lexid = #{record.lexid,jdbcType=SMALLINT},
      </if>
      <if test="record.tagcount != null">
        tagcount = #{record.tagcount,jdbcType=INTEGER},
      </if>
      <if test="record.sensekey != null">
        sensekey = #{record.sensekey,jdbcType=VARCHAR},
      </if>
      <if test="record.cased != null">
        cased = #{record.cased,jdbcType=VARCHAR},
      </if>
      <if test="record.pos != null">
        pos = #{record.pos,jdbcType=CHAR},
      </if>
      <if test="record.lexdomainid != null">
        lexdomainid = #{record.lexdomainid,jdbcType=SMALLINT},
      </if>
      <if test="record.definition != null">
        definition = #{record.definition,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.sampleset != null">
        sampleset = #{record.sampleset,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update dict
    set synsetid = #{record.synsetid,jdbcType=INTEGER},
      wordid = #{record.wordid,jdbcType=INTEGER},
      casedwordid = #{record.casedwordid,jdbcType=INTEGER},
      lemma = #{record.lemma,jdbcType=VARCHAR},
      senseid = #{record.senseid,jdbcType=INTEGER},
      sensenum = #{record.sensenum,jdbcType=SMALLINT},
      lexid = #{record.lexid,jdbcType=SMALLINT},
      tagcount = #{record.tagcount,jdbcType=INTEGER},
      sensekey = #{record.sensekey,jdbcType=VARCHAR},
      cased = #{record.cased,jdbcType=VARCHAR},
      pos = #{record.pos,jdbcType=CHAR},
      lexdomainid = #{record.lexdomainid,jdbcType=SMALLINT},
      definition = #{record.definition,jdbcType=LONGVARCHAR},
      sampleset = #{record.sampleset,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dict
    set synsetid = #{record.synsetid,jdbcType=INTEGER},
      wordid = #{record.wordid,jdbcType=INTEGER},
      casedwordid = #{record.casedwordid,jdbcType=INTEGER},
      lemma = #{record.lemma,jdbcType=VARCHAR},
      senseid = #{record.senseid,jdbcType=INTEGER},
      sensenum = #{record.sensenum,jdbcType=SMALLINT},
      lexid = #{record.lexid,jdbcType=SMALLINT},
      tagcount = #{record.tagcount,jdbcType=INTEGER},
      sensekey = #{record.sensekey,jdbcType=VARCHAR},
      cased = #{record.cased,jdbcType=VARCHAR},
      pos = #{record.pos,jdbcType=CHAR},
      lexdomainid = #{record.lexdomainid,jdbcType=SMALLINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="wordnet.genshin.domain.dict">
    <result column="synsetid" jdbcType="INTEGER" property="synsetid" />
    <result column="wordid" jdbcType="INTEGER" property="wordid" />
    <result column="casedwordid" jdbcType="INTEGER" property="casedwordid" />
    <result column="lemma" jdbcType="VARCHAR" property="lemma" />
    <result column="senseid" jdbcType="INTEGER" property="senseid" />
    <result column="sensenum" jdbcType="SMALLINT" property="sensenum" />
    <result column="lexid" jdbcType="SMALLINT" property="lexid" />
    <result column="tagcount" jdbcType="INTEGER" property="tagcount" />
    <result column="sensekey" jdbcType="VARCHAR" property="sensekey" />
    <result column="cased" jdbcType="VARCHAR" property="cased" />
    <result column="pos" jdbcType="CHAR" property="pos" />
    <result column="lexdomainid" jdbcType="SMALLINT" property="lexdomainid" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="wordnet.genshin.domain.dictWithBLOBs">
    <result column="definition" jdbcType="LONGVARCHAR" property="definition" />
    <result column="sampleset" jdbcType="LONGVARCHAR" property="sampleset" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    synsetid, wordid, casedwordid, lemma, senseid, sensenum, lexid, tagcount, sensekey, 
    cased, pos, lexdomainid
  </sql>
  <sql id="Blob_Column_List">
    definition, sampleset
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="wordnet.genshin.domain.dictExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from dict
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="wordnet.genshin.domain.dictExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dict
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="wordnet.genshin.domain.dictExample">
    delete from dict
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="wordnet.genshin.domain.dictWithBLOBs">
    insert into dict (synsetid, wordid, casedwordid, 
      lemma, senseid, sensenum, 
      lexid, tagcount, sensekey, 
      cased, pos, lexdomainid, 
      definition, sampleset)
    values (#{synsetid,jdbcType=INTEGER}, #{wordid,jdbcType=INTEGER}, #{casedwordid,jdbcType=INTEGER}, 
      #{lemma,jdbcType=VARCHAR}, #{senseid,jdbcType=INTEGER}, #{sensenum,jdbcType=SMALLINT}, 
      #{lexid,jdbcType=SMALLINT}, #{tagcount,jdbcType=INTEGER}, #{sensekey,jdbcType=VARCHAR}, 
      #{cased,jdbcType=VARCHAR}, #{pos,jdbcType=CHAR}, #{lexdomainid,jdbcType=SMALLINT}, 
      #{definition,jdbcType=LONGVARCHAR}, #{sampleset,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="wordnet.genshin.domain.dictWithBLOBs">
    insert into dict
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="synsetid != null">
        synsetid,
      </if>
      <if test="wordid != null">
        wordid,
      </if>
      <if test="casedwordid != null">
        casedwordid,
      </if>
      <if test="lemma != null">
        lemma,
      </if>
      <if test="senseid != null">
        senseid,
      </if>
      <if test="sensenum != null">
        sensenum,
      </if>
      <if test="lexid != null">
        lexid,
      </if>
      <if test="tagcount != null">
        tagcount,
      </if>
      <if test="sensekey != null">
        sensekey,
      </if>
      <if test="cased != null">
        cased,
      </if>
      <if test="pos != null">
        pos,
      </if>
      <if test="lexdomainid != null">
        lexdomainid,
      </if>
      <if test="definition != null">
        definition,
      </if>
      <if test="sampleset != null">
        sampleset,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="synsetid != null">
        #{synsetid,jdbcType=INTEGER},
      </if>
      <if test="wordid != null">
        #{wordid,jdbcType=INTEGER},
      </if>
      <if test="casedwordid != null">
        #{casedwordid,jdbcType=INTEGER},
      </if>
      <if test="lemma != null">
        #{lemma,jdbcType=VARCHAR},
      </if>
      <if test="senseid != null">
        #{senseid,jdbcType=INTEGER},
      </if>
      <if test="sensenum != null">
        #{sensenum,jdbcType=SMALLINT},
      </if>
      <if test="lexid != null">
        #{lexid,jdbcType=SMALLINT},
      </if>
      <if test="tagcount != null">
        #{tagcount,jdbcType=INTEGER},
      </if>
      <if test="sensekey != null">
        #{sensekey,jdbcType=VARCHAR},
      </if>
      <if test="cased != null">
        #{cased,jdbcType=VARCHAR},
      </if>
      <if test="pos != null">
        #{pos,jdbcType=CHAR},
      </if>
      <if test="lexdomainid != null">
        #{lexdomainid,jdbcType=SMALLINT},
      </if>
      <if test="definition != null">
        #{definition,jdbcType=LONGVARCHAR},
      </if>
      <if test="sampleset != null">
        #{sampleset,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="wordnet.genshin.domain.dictExample" resultType="java.lang.Long">
    select count(*) from dict
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dict
    <set>
      <if test="record.synsetid != null">
        synsetid = #{record.synsetid,jdbcType=INTEGER},
      </if>
      <if test="record.wordid != null">
        wordid = #{record.wordid,jdbcType=INTEGER},
      </if>
      <if test="record.casedwordid != null">
        casedwordid = #{record.casedwordid,jdbcType=INTEGER},
      </if>
      <if test="record.lemma != null">
        lemma = #{record.lemma,jdbcType=VARCHAR},
      </if>
      <if test="record.senseid != null">
        senseid = #{record.senseid,jdbcType=INTEGER},
      </if>
      <if test="record.sensenum != null">
        sensenum = #{record.sensenum,jdbcType=SMALLINT},
      </if>
      <if test="record.lexid != null">
        lexid = #{record.lexid,jdbcType=SMALLINT},
      </if>
      <if test="record.tagcount != null">
        tagcount = #{record.tagcount,jdbcType=INTEGER},
      </if>
      <if test="record.sensekey != null">
        sensekey = #{record.sensekey,jdbcType=VARCHAR},
      </if>
      <if test="record.cased != null">
        cased = #{record.cased,jdbcType=VARCHAR},
      </if>
      <if test="record.pos != null">
        pos = #{record.pos,jdbcType=CHAR},
      </if>
      <if test="record.lexdomainid != null">
        lexdomainid = #{record.lexdomainid,jdbcType=SMALLINT},
      </if>
      <if test="record.definition != null">
        definition = #{record.definition,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.sampleset != null">
        sampleset = #{record.sampleset,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update dict
    set synsetid = #{record.synsetid,jdbcType=INTEGER},
      wordid = #{record.wordid,jdbcType=INTEGER},
      casedwordid = #{record.casedwordid,jdbcType=INTEGER},
      lemma = #{record.lemma,jdbcType=VARCHAR},
      senseid = #{record.senseid,jdbcType=INTEGER},
      sensenum = #{record.sensenum,jdbcType=SMALLINT},
      lexid = #{record.lexid,jdbcType=SMALLINT},
      tagcount = #{record.tagcount,jdbcType=INTEGER},
      sensekey = #{record.sensekey,jdbcType=VARCHAR},
      cased = #{record.cased,jdbcType=VARCHAR},
      pos = #{record.pos,jdbcType=CHAR},
      lexdomainid = #{record.lexdomainid,jdbcType=SMALLINT},
      definition = #{record.definition,jdbcType=LONGVARCHAR},
      sampleset = #{record.sampleset,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dict
    set synsetid = #{record.synsetid,jdbcType=INTEGER},
      wordid = #{record.wordid,jdbcType=INTEGER},
      casedwordid = #{record.casedwordid,jdbcType=INTEGER},
      lemma = #{record.lemma,jdbcType=VARCHAR},
      senseid = #{record.senseid,jdbcType=INTEGER},
      sensenum = #{record.sensenum,jdbcType=SMALLINT},
      lexid = #{record.lexid,jdbcType=SMALLINT},
      tagcount = #{record.tagcount,jdbcType=INTEGER},
      sensekey = #{record.sensekey,jdbcType=VARCHAR},
      cased = #{record.cased,jdbcType=VARCHAR},
      pos = #{record.pos,jdbcType=CHAR},
      lexdomainid = #{record.lexdomainid,jdbcType=SMALLINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>